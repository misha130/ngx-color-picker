{"version":3,"file":"color-picker.directive.js","sourceRoot":"","sources":["../../src/lib/color-picker.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, OnInit, OnChanges, OnDestroy, Input, Output, EventEmitter,\r\n  HostListener, ApplicationRef, ComponentRef, ElementRef, ViewContainerRef,\r\n  Injector, ReflectiveInjector, ComponentFactoryResolver} from '@angular/core';\r\n\r\nimport { ColorPickerService } from './color-picker.service';\r\nimport { ColorPickerComponent } from './color-picker.component';\r\n\r\nimport { SliderPosition, SliderDimension} from './helpers';\r\n\r\n@Directive({\r\n  selector: '[colorPicker]'\r\n})\r\nexport class ColorPickerDirective implements OnInit, OnChanges, OnDestroy {\r\n  private dialog: any;\r\n\r\n  private dialogCreated: boolean = false;\r\n  private ignoreChanges: boolean = false;\r\n\r\n  private cmpRef: ComponentRef<ColorPickerComponent>;\r\n\r\n  @Input() colorPicker: string;\r\n\r\n  @Input() cpWidth: string = '230px';\r\n  @Input() cpHeight: string = 'auto';\r\n\r\n  @Input() cpToggle: boolean = false;\r\n\r\n  @Input() cpIgnoredElements: any = [];\r\n\r\n  @Input() cpDisableInput: boolean = false;\r\n\r\n  @Input() cpAlphaChannel: string = 'enabled';\r\n  @Input() cpOutputFormat: string = 'hex';\r\n\r\n  @Input() cpFallbackColor: string = '#fff';\r\n\r\n  @Input() cpDialogDisplay: string = 'popup';\r\n\r\n  @Input() cpSaveClickOutside: boolean = true;\r\n\r\n  @Input() cpUseRootViewContainer: boolean = false;\r\n\r\n  @Input() cpPosition: string = 'right';\r\n  @Input() cpPositionOffset: string = '0%';\r\n  @Input() cpPositionRelativeToArrow: boolean = false;\r\n\r\n  @Input() cpOKButton: boolean = false;\r\n  @Input() cpOKButtonText: string = 'OK';\r\n  @Input() cpOKButtonClass: string = 'cp-ok-button-class';\r\n\r\n  @Input() cpCancelButton: boolean = false;\r\n  @Input() cpCancelButtonText: string = 'Cancel';\r\n  @Input() cpCancelButtonClass: string = 'cp-cancel-button-class';\r\n\r\n  @Input() cpPresetLabel: string = 'Preset colors';\r\n  @Input() cpPresetColors: Array<string>;\r\n  @Input() cpMaxPresetColorsLength: number = 6;\r\n\r\n  @Input() cpPresetEmptyMessage: string = 'No colors added';\r\n  @Input() cpPresetEmptyMessageClass: string = 'preset-empty-message';\r\n\r\n  @Input() cpAddColorButton: boolean = false;\r\n  @Input() cpAddColorButtonText: string = 'Add color';\r\n  @Input() cpAddColorButtonClass: string = 'cp-add-color-button-class';\r\n\r\n  @Input() cpRemoveColorButtonClass: string = 'cp-remove-color-button-class';\r\n\r\n  @Output() cpInputChange = new EventEmitter<any>(true);\r\n\r\n  @Output() cpToggleChange = new EventEmitter<boolean>(true);\r\n\r\n  @Output() cpSliderChange = new EventEmitter<any>(true);\r\n  @Output() cpSliderDragEnd = new EventEmitter<string>(true);\r\n  @Output() cpSliderDragStart = new EventEmitter<string>(true);\r\n\r\n  @Output() cpPresetColorsChange = new EventEmitter<any>(true);\r\n\r\n  @Output() colorPickerCancel = new EventEmitter<string>(true);\r\n  @Output() colorPickerSelect = new EventEmitter<string>(true);\r\n  @Output() colorPickerChange = new EventEmitter<string>(false);\r\n\r\n  @HostListener('click', ['$event']) handleClick(event: any) {\r\n    this.inputFocus();\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) handleFocus(event: any) {\r\n    this.inputFocus();\r\n  }\r\n\r\n  @HostListener('input', ['$event']) handleInput(event: any) {\r\n    this.inputChange(event.target.value);\r\n  }\r\n\r\n  constructor(private injector: Injector, private cfr: ComponentFactoryResolver,\r\n    private appRef: ApplicationRef, private vcRef: ViewContainerRef, private elRef: ElementRef,\r\n    private service: ColorPickerService) {}\r\n\r\n  ngOnInit() {\r\n    this.colorPicker = this.colorPicker || this.cpFallbackColor || 'rgba(0, 0, 0, 1)';\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.cmpRef !== undefined) {\r\n      this.cmpRef.destroy();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: any) {\r\n    if (changes.cpToggle) {\r\n      if (changes.cpToggle.currentValue) {\r\n        this.openDialog();\r\n      }\r\n\r\n      if (!changes.cpToggle.currentValue && this.dialog) {\r\n        this.dialog.closeDialog();\r\n      }\r\n    }\r\n\r\n    if (changes.colorPicker) {\r\n      if (this.dialog && !this.ignoreChanges) {\r\n        if (this.cpDialogDisplay === 'inline') {\r\n          this.dialog.setInitialColor(changes.colorPicker.currentValue);\r\n        }\r\n\r\n        this.dialog.setColorFromString(changes.colorPicker.currentValue, false);\r\n      }\r\n\r\n      this.ignoreChanges = false;\r\n    }\r\n\r\n    if (changes.cpPresetLabel || changes.cpPresetColors) {\r\n      if (this.dialog) {\r\n        this.dialog.setPresetConfig(this.cpPresetLabel, this.cpPresetColors);\r\n      }\r\n    }\r\n  }\r\n\r\n  public openDialog() {\r\n    this.colorPicker = this.colorPicker || this.cpFallbackColor || 'rgba(0, 0, 0, 1)';\r\n\r\n    if (!this.dialogCreated) {\r\n      let vcRef = this.vcRef;\r\n\r\n      this.dialogCreated = true;\r\n\r\n      if (this.cpUseRootViewContainer && this.cpDialogDisplay !== 'inline') {\r\n        const classOfRootComponent = this.appRef.componentTypes[0];\r\n        const appInstance = this.injector.get(classOfRootComponent);\r\n\r\n        vcRef = appInstance.vcRef || appInstance.viewContainerRef || this.vcRef;\r\n\r\n        if (vcRef === this.vcRef) {\r\n          console.warn('You are using cpUseRootViewContainer, ' +\r\n            'but the root component is not exposing viewContainerRef!' +\r\n            'Please expose it by adding \\'public vcRef: ViewContainerRef\\' to the constructor.');\r\n        }\r\n      }\r\n\r\n      const compFactory = this.cfr.resolveComponentFactory(ColorPickerComponent);\r\n      const injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);\r\n\r\n      this.cmpRef = vcRef.createComponent(compFactory, 0, injector, []);\r\n\r\n      this.cmpRef.instance.setupDialog(this, this.elRef, this.colorPicker,\r\n        this.cpWidth, this.cpHeight, this.cpDialogDisplay,\r\n        this.cpAlphaChannel, this.cpOutputFormat, this.cpDisableInput,\r\n        this.cpIgnoredElements, this.cpSaveClickOutside, this.cpUseRootViewContainer,\r\n        this.cpPosition, this.cpPositionOffset, this.cpPositionRelativeToArrow,\r\n        this.cpPresetLabel, this.cpPresetColors, this.cpMaxPresetColorsLength,\r\n        this.cpPresetEmptyMessage, this.cpPresetEmptyMessageClass,\r\n        this.cpOKButton, this.cpOKButtonClass, this.cpOKButtonText,\r\n        this.cpCancelButton, this.cpCancelButtonClass, this.cpCancelButtonText,\r\n        this.cpAddColorButton, this.cpAddColorButtonClass, this.cpAddColorButtonText,\r\n        this.cpRemoveColorButtonClass);\r\n        this.dialog = this.cmpRef.instance;\r\n\r\n        if (this.vcRef !== vcRef) {\r\n          this.cmpRef.changeDetectorRef.detectChanges();\r\n        }\r\n    } else if (this.dialog) {\r\n      this.dialog.openDialog(this.colorPicker);\r\n    }\r\n  }\r\n\r\n  public toggle(value: boolean) {\r\n    this.cpToggleChange.emit(value);\r\n  }\r\n\r\n  public colorChanged(value: string, ignore: boolean = true) {\r\n    this.ignoreChanges = ignore;\r\n    this.colorPickerChange.emit(value);\r\n  }\r\n\r\n  public colorCanceled() {\r\n    this.colorPickerCancel.emit();\r\n  }\r\n\r\n  public colorSelected(value: string) {\r\n    this.colorPickerSelect.emit(value);\r\n  }\r\n\r\n  public inputFocus() {\r\n    const element = this.elRef.nativeElement;\r\n\r\n    if (this.cpIgnoredElements.filter((item: any) => item === element).length === 0) {\r\n      this.openDialog();\r\n    }\r\n  }\r\n\r\n  public inputChange(value: string) {\r\n    if (this.dialog) {\r\n      this.dialog.setColorFromString(value, true);\r\n    } else {\r\n      this.colorPicker = value || this.cpFallbackColor || 'rgba(0, 0, 0, 1)';\r\n\r\n      this.colorPickerChange.emit(this.colorPicker);\r\n    }\r\n  }\r\n\r\n  public inputChanged(event: any) {\r\n    this.cpInputChange.emit(event);\r\n  }\r\n\r\n  public sliderChanged(event: any) {\r\n    this.cpSliderChange.emit(event);\r\n  }\r\n\r\n  public sliderDragEnd(event: any) {\r\n    this.cpSliderDragEnd.emit(event);\r\n  }\r\n\r\n  public sliderDragStart(event: any) {\r\n    this.cpSliderDragStart.emit(event);\r\n  }\r\n\r\n  public presetColorsChanged(value: Array<any>) {\r\n    this.cpPresetColorsChange.emit(value);\r\n  }\r\n}\r\n"]}